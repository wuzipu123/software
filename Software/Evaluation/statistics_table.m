function [table_statistics] = statistics_table(Variables_cell)
%'statistics_table' uses the cell generated by the function
%'multiple_regression' to generate a table with statistics. 

%Generated values: 
%{
SSE ... sum of squared estimate of errors / residual sum of squares
    sum of square of difference between measured data and model data 
SSR ... sum of squares due to regression 
    sum of square of difference between model data and mean of measured data
SST ... total sum of squares 
    sum of square of difference between measured data and mean of measured data 
MB ... mean bias (error)
    sum of difference between measured data and model data, divided by degrees of freedom 
RSME ... root mean square error 
    sum of square of difference between measured data and model data, divided by
    degrees of freedom
R2 ... coefficient of determination 
corr_2 ... Pearson linear correlation coefficient^2, not calculated
manually but with 'corr' function of matlab. Used as comparison to R2
%}
%R2 not useful for non-linear calibration methods, since SST does not equal
%SSE+SSR, which is used for calculating R2. 


%Input: 
%Cell with following structure: 
%Variables_cell{Calibrations method}{Data for statistics table}

%Calibration method: Which method is to be used. Function
%'multiple_regression' generates following 8 methods:
%not calibrated, lin reg wo offset, poly1, poly2, poly3, exp, power, reg_tree, 
%      1               2              3      4     5      6     7       8
%Any number of calibration methods can be manually added to this list, as
%long as the structure is kept the same. 

%Data for statistics table:
%{{model_coefficients, predicted_data, observed_data, Name, Function}}
%{{        1          ,        2      ,        3     ,  4  ,   5    }}


%Output: 
%Table with SSE, SSR, SST, MB, RSME, R2, R2 adjusted for degrees of
%freedom, corr^2 (to compare to R2) 



table_var_types={'string','double','double','double','double','double','double','double','double','string'};
table_var_names={'Name','SSE','SSR','SST','MB','RSME','R2','adjustedR2','corr_2','Function'};
table_statistics=table('Size',[length(Variables_cell) length(table_var_types)],'VariableTypes',table_var_types,'VariableNames',table_var_names);

for i=1:length(Variables_cell)    
    table_statistics.Name(i)=Variables_cell{i}{4}; 
    table_statistics.SSE(i)=sum((Variables_cell{i}{3}-Variables_cell{i}{2}).^2);
    table_statistics.SSR(i)=sum((Variables_cell{i}{2}-mean(Variables_cell{i}{3})).^2);
    %table_statistics.SST(i)=(length(Variables_cell{i}{3})-1)*var(Variables_cell{i}{3});
    %additional way of calculating SST; 
    table_statistics.SST(i)=sum((Variables_cell{i}{3}-mean(Variables_cell{i}{3})).^2);
    table_statistics.MB(i)=sum(Variables_cell{i}{2}-Variables_cell{i}{3})/length(Variables_cell{i}{3});
    table_statistics.RSME(i)=sqrt(sum((Variables_cell{i}{3}-Variables_cell{i}{2}).^2)/length(Variables_cell{i}{3}(1,:)));
    table_statistics.R2(i)=1-(table_statistics.SSE(i)/table_statistics.SST(i)); 
    
    %adjustedR2 checks whether the modelcoefficients are of type 'double' 
    %since 'multiple_regression' also includes a regression tree, the tree
    %structure would give problems with this formula
    Z=isa(Variables_cell{i}{1,1},'double');
    if Z==1
    table_statistics.adjustedR2(i)=1-table_statistics.SSE(i)/table_statistics.SST(i)*(length(Variables_cell{i}{3})-1)/(length(Variables_cell{i}{3})-length(Variables_cell{i}{1}));
    else
    table_statistics.adjustedR2(i)=nan;
    end
    
    table_statistics.corr_2(i)=corr(Variables_cell{i}{2},Variables_cell{i}{3})^2;
    
    table_statistics.Function(i)=Variables_cell{i}{5};
    
end








